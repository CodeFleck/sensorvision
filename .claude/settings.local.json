{
  "permissions": {
    "allow": [
      "Bash(.\\gradlew.bat bootRun:*)",
      "Bash(timeout:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(docker logs:*)",
      "Bash(docker-compose restart:*)",
      "Bash(docker-compose up:*)",
      "Bash(curl -X POST http://localhost:8080/api/v1/auth/register -H \"Content-Type: application/json\" -d '{\"\"username\"\":\"\"testuser\"\",\"\"email\"\":\"\"test@test.com\"\",\"\"password\"\":\"\"Password123!\"\",\"\"firstName\"\":\"\"Test\"\",\"\"lastName\"\":\"\"User\"\",\"\"organizationName\"\":\"\"Test Org\"\"}')",
      "Bash(curl -X POST http://localhost:8080/api/v1/auth/register -H \"Content-Type: application/json\" -d \"{\"\"username\"\":\"\"testuser2\"\",\"\"email\"\":\"\"test2@test.com\"\",\"\"password\"\":\"\"Password123!\"\",\"\"firstName\"\":\"\"Test\"\",\"\"lastName\"\":\"\"User\"\",\"\"organizationName\"\":\"\"Test Org\"\"}\")",
      "Bash(curl -X POST http://localhost:3001/api/v1/auth/register -H \"Content-Type: application/json\" -d \"{\"\"username\"\":\"\"testuser3\"\",\"\"email\"\":\"\"test3@test.com\"\",\"\"password\"\":\"\"Password123!\"\",\"\"firstName\"\":\"\"Test\"\",\"\"lastName\"\":\"\"User\"\",\"\"organizationName\"\":\"\"Test Org\"\"}\")",
      "Bash(curl -X POST http://localhost:3001/api/v1/auth/login -H \"Content-Type: application/json\" -d \"{\"\"username\"\":\"\"testuser2\"\",\"\"password\"\":\"\"Password123!\"\"}\")",
      "Bash(npm run dev)",
      "Bash(taskkill:*)",
      "Bash(docker-compose:*)",
      "Bash(curl -X POST http://localhost:8080/api/v1/auth/register -H \"Content-Type: application/json\" -d \"{\"\"username\"\":\"\"codefleck\"\",\"\"email\"\":\"\"newemailtest@test.com\"\",\"\"password\"\":\"\"Password123!\"\",\"\"firstName\"\":\"\"Test\"\",\"\"lastName\"\":\"\"User\"\",\"\"organizationName\"\":\"\"Test Org\"\"}\" -w \"\\nHTTP Status: %{http_code}\\n\")",
      "Bash(curl -X POST http://localhost:8080/api/v1/auth/login -H \"Content-Type: application/json\" -d \"{\"\"username\"\":\"\"newuser1760316457\"\",\"\"password\"\":\"\"Password123!\"\"}\")",
      "Bash(TOKEN=\"eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIzNiIsInVzZXJuYW1lIjoibmV3dXNlcjE3NjAzMTY0NTciLCJlbWFpbCI6Im5ld3VzZXIxNzYwMzE2NDU3QHRlc3QuY29tIiwib3JnYW5pemF0aW9uSWQiOjM1LCJpYXQiOjE3NjAzMTY5MDgsImV4cCI6MTc2MDQwMzMwOH0.4sYn70tTCl6zsp63yzbDEfMXNM0ygMHsbh_77Q7Asg5SGJdomMTvlWtvKiaeg41v\")",
      "Bash(curl:*)",
      "Bash(docker exec:*)",
      "Bash(.\\gradlew.bat clean:*)",
      "Bash(./gradlew.bat clean:*)",
      "Bash(./gradlew.bat bootRun:*)",
      "WebSearch",
      "WebFetch(domain:ubidots.com)",
      "WebFetch(domain:docs.ubidots.com)",
      "Bash(gradlew.bat clean:*)",
      "Bash(./gradlew:*)",
      "Bash(npm run build)",
      "Bash(docker ps:*)",
      "Bash(docker stop:*)",
      "Bash(python:*)",
      "Bash(node -e \"const fs = require(''fs''); try { JSON.parse(fs.readFileSync(''../SensorVision_Geolocation_APIs.postman_collection.json'', ''utf8'')); console.log(''JSON is valid''); } catch(e) { console.log(''Error:'', e.message); }\")",
      "Bash(cat:*)",
      "Bash(npm run build:*)",
      "Bash(./gradlew.bat compileJava:*)",
      "Bash(npx eslint:*)",
      "Bash(npx tsc:*)",
      "Bash(npm install:*)",
      "Bash(ren:*)",
      "Bash(npm audit:*)",
      "Bash(del srcmainresourcesdbmigrationV18__Add_dashboard_organization.sql)",
      "Bash(chmod:*)",
      "Bash(powershell:*)",
      "Bash(docker inspect:*)",
      "Bash(del:*)",
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(set \"DB_USERNAME=sensorvision\")",
      "Bash(set \"DB_PASSWORD=sensorvision123\")",
      "Bash(dir:*)",
      "Bash(echo:*)",
      "Bash(./gradlew.bat test:*)",
      "Bash(docker build -t sensorvision-backend:latest . --progress=plain --no-cache)",
      "Bash(Select-String -Pattern \"frontend|dist|build\" -Context 2)",
      "Bash(jar -tf sensorvision-0.0.1-SNAPSHOT.jar)",
      "Bash(Select-String \"static\")",
      "Bash(jar -tf build/libs/sensorvision-0.0.1-SNAPSHOT.jar)",
      "Bash(test -d src/main/resources/static)",
      "Bash(docker build -t sensorvision-backend:latest .)",
      "Bash(docker tag sensorvision-backend:latest 639230721997.dkr.ecr.us-west-2.amazonaws.com/sensorvision-backend:latest)",
      "Bash(docker push 639230721997.dkr.ecr.us-west-2.amazonaws.com/sensorvision-backend:latest)",
      "Bash(ssh -i \"C:\\Users\\danie\\.ssh\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"cd /home/ubuntu/sensorvision && aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 639230721997.dkr.ecr.us-west-2.amazonaws.com && docker-compose -f docker-compose.production.yml pull backend\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"cd /home/ubuntu/sensorvision && aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 639230721997.dkr.ecr.us-west-2.amazonaws.com && docker-compose -f docker-compose.production.yml pull backend\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"cd /home/ubuntu/sensorvision && docker-compose -f docker-compose.production.yml down && docker-compose -f docker-compose.production.yml up -d\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"docker exec sensorvision-backend ls -la /app/BOOT-INF/classes/static/\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"docker exec sensorvision-backend jar -tf /app/app.jar | grep ''static/'' | head -10\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"docker exec sensorvision-backend sh -c ''unzip -l /app/app.jar | grep static''\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"docker exec sensorvision-backend curl -s http://localhost:8080/actuator/health\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"curl -s http://localhost:8080/actuator/health | head -5\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"curl -s http://localhost:8080/ | head -20\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"docker ps\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"cd /home/ubuntu/sensorvision && aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 639230721997.dkr.ecr.us-west-2.amazonaws.com && docker-compose -f docker-compose.production.yml pull backend && docker-compose -f docker-compose.production.yml down && docker-compose -f docker-compose.production.yml up -d\")",
      "Bash(ssh -i \"C:\\sensorvision\\sensorvision-key.pem\" -o StrictHostKeyChecking=no ubuntu@35.88.65.186 \"docker logs sensorvision-backend --tail 30\")"
    ],
    "deny": [],
    "ask": []
  }
}
