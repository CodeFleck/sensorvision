# =============================================================================
# SensorVision Production Environment Configuration Template
# =============================================================================
# INSTRUCTIONS:
# 1. Copy this file to .env.production on your EC2 instance
# 2. Replace all placeholder values with actual production credentials
# 3. NEVER commit .env.production to version control
# 4. Protect this file with chmod 600 .env.production
# =============================================================================

# =============================================================================
# AWS ECR Configuration (for Docker image pulling)
# =============================================================================
ECR_REGISTRY=123456789012.dkr.ecr.us-east-1.amazonaws.com
IMAGE_TAG=latest

# =============================================================================
# Database Configuration (RDS PostgreSQL)
# =============================================================================
# Format: jdbc:postgresql://<rds-endpoint>:5432/<database-name>
# Example: jdbc:postgresql://sensorvision-db.xxxxx.us-east-1.rds.amazonaws.com:5432/sensorvision
DB_URL=jdbc:postgresql://YOUR_RDS_ENDPOINT:5432/sensorvision
DB_USERNAME=sensorvision_admin
DB_PASSWORD=CHANGE_ME_STRONG_PASSWORD_HERE

# Connection pool settings (adjust based on instance size)
DB_POOL_SIZE=10
DB_POOL_MIN_IDLE=2

# =============================================================================
# JWT Authentication (CRITICAL - MUST BE SECURE)
# =============================================================================
# Generate with: openssl rand -hex 64
# MUST be different from development!
JWT_SECRET=CHANGE_ME_GENERATE_WITH_OPENSSL_RAND_HEX_64
JWT_EXPIRATION_MS=86400000
# Update with your production domain
JWT_ISSUER=https://your-domain.com

# =============================================================================
# MQTT Broker Configuration
# =============================================================================
MQTT_BROKER_URL=tcp://mosquitto:1883
# Generate secure credentials
MQTT_USERNAME=sensorvision_mqtt
MQTT_PASSWORD=CHANGE_ME_STRONG_MQTT_PASSWORD
# IMPORTANT: Enable device authentication in production
MQTT_DEVICE_AUTH_REQUIRED=true

# =============================================================================
# Email Notification Configuration (Optional)
# =============================================================================
EMAIL_ENABLED=false
EMAIL_FROM=noreply@your-domain.com

# For Gmail/Google Workspace
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
# Use App Password for Gmail: https://support.google.com/accounts/answer/185833
SMTP_PASSWORD=your-app-password-here

# For AWS SES
# SMTP_HOST=email-smtp.us-east-1.amazonaws.com
# SMTP_PORT=587
# SMTP_USERNAME=your-ses-smtp-username
# SMTP_PASSWORD=your-ses-smtp-password

# =============================================================================
# SMS Notification Configuration (Optional - Twilio)
# =============================================================================
SMS_ENABLED=false
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
SMS_FROM_NUMBER=+1234567890

# =============================================================================
# Webhook Notification Configuration
# =============================================================================
WEBHOOK_ENABLED=true
WEBHOOK_TIMEOUT_MS=5000

# =============================================================================
# Slack Integration (Optional)
# =============================================================================
SLACK_ENABLED=false
# Create webhook: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# =============================================================================
# Microsoft Teams Integration (Optional)
# =============================================================================
TEAMS_ENABLED=false
# Create webhook: https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook
TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/YOUR/WEBHOOK/URL

# =============================================================================
# Support Configuration
# =============================================================================
SUPPORT_ISSUE_EMAIL=support@your-domain.com
SUPPORT_ISSUE_ENABLED=true

# =============================================================================
# Domain Configuration (for CORS, WebSocket, OAuth redirects)
# =============================================================================
# Your production domain (without protocol)
DOMAIN=your-domain.com
# Full URL with protocol
APP_URL=https://your-domain.com

# =============================================================================
# OAuth Configuration (Optional - for social login)
# =============================================================================
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# =============================================================================
# Monitoring and Logging
# =============================================================================
# CloudWatch log group (if using CloudWatch agent)
CLOUDWATCH_LOG_GROUP=/aws/ec2/sensorvision
LOG_LEVEL=INFO

# =============================================================================
# SECURITY CHECKLIST
# =============================================================================
# [ ] Changed all passwords from defaults
# [ ] Generated new JWT_SECRET (64+ hex characters)
# [ ] Updated JWT_ISSUER to production domain
# [ ] Enabled MQTT_DEVICE_AUTH_REQUIRED=true
# [ ] Configured SSL certificates (Let's Encrypt or ACM)
# [ ] Set up database backups in RDS
# [ ] Configured CloudWatch monitoring
# [ ] Restricted security groups (ports 22, 80, 443, 1883 only)
# [ ] Created IAM role for EC2 with minimal permissions
# [ ] Set file permissions: chmod 600 .env.production
