{
  "config": {
    "configFile": "C:\\sensorvision\\frontend\\playwright.config.ts",
    "rootDir": "C:/sensorvision/frontend/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 11
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "test-results/html"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/junit.xml"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "C:/sensorvision/frontend/test-artifacts",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 11
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "C:/sensorvision/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/sensorvision/frontend/test-artifacts",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 11
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "C:/sensorvision/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/sensorvision/frontend/test-artifacts",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 11
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "C:/sensorvision/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/sensorvision/frontend/test-artifacts",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 11
        },
        "id": "mobile-chrome",
        "name": "mobile-chrome",
        "testDir": "C:/sensorvision/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/sensorvision/frontend/test-artifacts",
        "repeatEach": 1,
        "retries": 1,
        "metadata": {
          "actualWorkers": 11
        },
        "id": "mobile-safari",
        "name": "mobile-safari",
        "testDir": "C:/sensorvision/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "changed",
    "updateSourceMethod": "patch",
    "version": "1.56.1",
    "workers": 11,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:3001",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "01-authentication.spec.ts",
      "file": "01-authentication.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication System",
          "file": "01-authentication.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "should display login page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 980,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.495Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "4b4d36e9b0558f4ed4af-19a45b799dc6bdff5c5a",
              "file": "01-authentication.spec.ts",
              "line": 19,
              "column": 3
            },
            {
              "title": "should login successfully with valid credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 6239,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.510Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "4b4d36e9b0558f4ed4af-f05c2be5bf00bdbf3804",
              "file": "01-authentication.spec.ts",
              "line": 29,
              "column": 3
            },
            {
              "title": "should show error message with invalid credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1642,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.495Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "4b4d36e9b0558f4ed4af-1ff4c5c9dea5e771fb6f",
              "file": "01-authentication.spec.ts",
              "line": 54,
              "column": 3
            },
            {
              "title": "should logout successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 4484,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.510Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "4b4d36e9b0558f4ed4af-ac351abf7c797a9db5f6",
              "file": "01-authentication.spec.ts",
              "line": 66,
              "column": 3
            },
            {
              "title": "should redirect to login when accessing protected route without auth",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1546,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.494Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "4b4d36e9b0558f4ed4af-7181a64b440da781be4a",
              "file": "01-authentication.spec.ts",
              "line": 86,
              "column": 3
            },
            {
              "title": "should persist session after page reload",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 3713,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.558Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "4b4d36e9b0558f4ed4af-4ab68b290e1c0754dd60",
              "file": "01-authentication.spec.ts",
              "line": 94,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "02-device-management.spec.ts",
      "file": "02-device-management.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Device Management",
          "file": "02-device-management.spec.ts",
          "line": 15,
          "column": 6,
          "specs": [
            {
              "title": "should display devices list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 6,
                      "status": "passed",
                      "duration": 3789,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.512Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-d070624f8217c863abc0",
              "file": "02-device-management.spec.ts",
              "line": 29,
              "column": 3
            },
            {
              "title": "should create a new device",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 7,
                      "status": "timedOut",
                      "duration": 60102,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 47
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"deviceId\"]')\u001b[22m\n\n\n  45 |     const timestamp = Date.now();\n  46 |     await page.fill('input[name=\"name\"]', `E2E Test Device ${timestamp}`);\n> 47 |     await page.fill('input[name=\"deviceId\"]', `e2e-device-${timestamp}`);\n     |                ^\n  48 |     await page.fill('textarea[name=\"description\"]', 'Created by E2E test');\n  49 |\n  50 |     // Take screenshot of create form\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:47:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.542Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-d2b89--should-create-a-new-device-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-d2b89--should-create-a-new-device-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-d2b89--should-create-a-new-device-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "timedOut",
                      "duration": 60330,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 47
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"deviceId\"]')\u001b[22m\n\n\n  45 |     const timestamp = Date.now();\n  46 |     await page.fill('input[name=\"name\"]', `E2E Test Device ${timestamp}`);\n> 47 |     await page.fill('input[name=\"deviceId\"]', `e2e-device-${timestamp}`);\n     |                ^\n  48 |     await page.fill('textarea[name=\"description\"]', 'Created by E2E test');\n  49 |\n  50 |     // Take screenshot of create form\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:47:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:52.864Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-d2b89--should-create-a-new-device-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-d2b89--should-create-a-new-device-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-d2b89--should-create-a-new-device-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-d2b89--should-create-a-new-device-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-54033cff607f38550e59",
              "file": "02-device-management.spec.ts",
              "line": 40,
              "column": 3
            },
            {
              "title": "should edit an existing device",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 8,
                      "status": "timedOut",
                      "duration": 62314,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 71
                          },
                          "message": "Error: page.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[aria-label=\"Edit\"], button:has-text(\"Edit\"), [data-action=\"edit\"]')\u001b[22m\n\n\n  69 |   test('should edit an existing device', async ({ page }) => {\n  70 |     // Find and click edit button for first device\n> 71 |     await page.click('[aria-label=\"Edit\"], button:has-text(\"Edit\"), [data-action=\"edit\"]', { first: true });\n     |                ^\n  72 |\n  73 |     // Modify device name\n  74 |     await page.fill('input[name=\"name\"]', `Updated Device ${Date.now()}`);\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:71:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.506Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-259ab-uld-edit-an-existing-device-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-259ab-uld-edit-an-existing-device-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-259ab-uld-edit-an-existing-device-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 22,
                      "parallelIndex": 7,
                      "status": "timedOut",
                      "duration": 61924,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 71
                          },
                          "message": "Error: page.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[aria-label=\"Edit\"], button:has-text(\"Edit\"), [data-action=\"edit\"]')\u001b[22m\n\n\n  69 |   test('should edit an existing device', async ({ page }) => {\n  70 |     // Find and click edit button for first device\n> 71 |     await page.click('[aria-label=\"Edit\"], button:has-text(\"Edit\"), [data-action=\"edit\"]', { first: true });\n     |                ^\n  72 |\n  73 |     // Modify device name\n  74 |     await page.fill('input[name=\"name\"]', `Updated Device ${Date.now()}`);\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:71:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:55.101Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-259ab-uld-edit-an-existing-device-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-259ab-uld-edit-an-existing-device-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-259ab-uld-edit-an-existing-device-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-259ab-uld-edit-an-existing-device-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-7c9d0ae1f25bf3f98bb5",
              "file": "02-device-management.spec.ts",
              "line": 69,
              "column": 3
            },
            {
              "title": "should generate device token",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 9,
                      "status": "timedOut",
                      "duration": 62402,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 88
                          },
                          "message": "Error: page.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[aria-label=\"Manage Token\"], button:has-text(\"Token\"), [data-action=\"token\"]')\u001b[22m\n\n\n  86 |   test('should generate device token', async ({ page }) => {\n  87 |     // Find first device and click manage tokens\n> 88 |     await page.click('[aria-label=\"Manage Token\"], button:has-text(\"Token\"), [data-action=\"token\"]', { first: true });\n     |                ^\n  89 |\n  90 |     // Click generate token button\n  91 |     await page.click('button:has-text(\"Generate Token\"), button:has-text(\"Create Token\")');\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:88:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.542Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-f0ad3-hould-generate-device-token-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-f0ad3-hould-generate-device-token-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-f0ad3-hould-generate-device-token-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 23,
                      "parallelIndex": 8,
                      "status": "timedOut",
                      "duration": 61933,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 88
                          },
                          "message": "Error: page.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[aria-label=\"Manage Token\"], button:has-text(\"Token\"), [data-action=\"token\"]')\u001b[22m\n\n\n  86 |   test('should generate device token', async ({ page }) => {\n  87 |     // Find first device and click manage tokens\n> 88 |     await page.click('[aria-label=\"Manage Token\"], button:has-text(\"Token\"), [data-action=\"token\"]', { first: true });\n     |                ^\n  89 |\n  90 |     // Click generate token button\n  91 |     await page.click('button:has-text(\"Generate Token\"), button:has-text(\"Create Token\")');\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:88:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:55.501Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-f0ad3-hould-generate-device-token-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-f0ad3-hould-generate-device-token-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-f0ad3-hould-generate-device-token-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-f0ad3-hould-generate-device-token-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-7af164ab002050fc4f1c",
              "file": "02-device-management.spec.ts",
              "line": 86,
              "column": 3
            },
            {
              "title": "should search for devices",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 10,
                      "status": "passed",
                      "duration": 4978,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:51.526Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-06a2d120276da7851096",
              "file": "02-device-management.spec.ts",
              "line": 105,
              "column": 3
            },
            {
              "title": "should display device details",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 5094,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:52.654Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-a284dc93689987865b67",
              "file": "02-device-management.spec.ts",
              "line": 119,
              "column": 3
            },
            {
              "title": "should toggle device active status",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 62312,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 39,
                            "line": 136
                          },
                          "message": "Error: locator.isChecked: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[role=\"switch\"], input[type=\"checkbox\"]').first()\u001b[22m\n\n\n  134 |     // Find and click active/inactive toggle\n  135 |     const toggle = page.locator('[role=\"switch\"], input[type=\"checkbox\"]').first();\n> 136 |     const initialState = await toggle.isChecked();\n      |                                       ^\n  137 |\n  138 |     await toggle.click();\n  139 |\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:136:39"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:53.238Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-b64cc-toggle-device-active-status-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-b64cc-toggle-device-active-status-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-b64cc-toggle-device-active-status-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 24,
                      "parallelIndex": 4,
                      "status": "timedOut",
                      "duration": 61813,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 39,
                            "line": 136
                          },
                          "message": "Error: locator.isChecked: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[role=\"switch\"], input[type=\"checkbox\"]').first()\u001b[22m\n\n\n  134 |     // Find and click active/inactive toggle\n  135 |     const toggle = page.locator('[role=\"switch\"], input[type=\"checkbox\"]').first();\n> 136 |     const initialState = await toggle.isChecked();\n      |                                       ^\n  137 |\n  138 |     await toggle.click();\n  139 |\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:136:39"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:56.547Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-b64cc-toggle-device-active-status-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-b64cc-toggle-device-active-status-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-b64cc-toggle-device-active-status-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-b64cc-toggle-device-active-status-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-d513ae00cf447b51c3ce",
              "file": "02-device-management.spec.ts",
              "line": 133,
              "column": 3
            },
            {
              "title": "should delete a device",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 60114,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 153
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"deviceId\"]')\u001b[22m\n\n\n  151 |     const timestamp = Date.now();\n  152 |     await page.fill('input[name=\"name\"]', `Delete Me ${timestamp}`);\n> 153 |     await page.fill('input[name=\"deviceId\"]', `delete-me-${timestamp}`);\n      |                ^\n  154 |     await page.click('button[type=\"submit\"]:has-text(\"Create\")');\n  155 |     await page.waitForSelector('text=/Success/', { timeout: 10000 });\n  156 |\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:153:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:53.377Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-74ee7-ment-should-delete-a-device-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-74ee7-ment-should-delete-a-device-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-74ee7-ment-should-delete-a-device-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 21,
                      "parallelIndex": 2,
                      "status": "timedOut",
                      "duration": 60230,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts",
                            "column": 16,
                            "line": 153
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"deviceId\"]')\u001b[22m\n\n\n  151 |     const timestamp = Date.now();\n  152 |     await page.fill('input[name=\"name\"]', `Delete Me ${timestamp}`);\n> 153 |     await page.fill('input[name=\"deviceId\"]', `delete-me-${timestamp}`);\n      |                ^\n  154 |     await page.click('button[type=\"submit\"]:has-text(\"Create\")');\n  155 |     await page.waitForSelector('text=/Success/', { timeout: 10000 });\n  156 |\n    at C:\\sensorvision\\frontend\\e2e\\02-device-management.spec.ts:153:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:54.527Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-74ee7-ment-should-delete-a-device-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-74ee7-ment-should-delete-a-device-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-74ee7-ment-should-delete-a-device-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\02-device-management-Devic-74ee7-ment-should-delete-a-device-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "0d46a1bf02353a8548f7-640aa3b8f34aced1edfc",
              "file": "02-device-management.spec.ts",
              "line": 148,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "03-dashboard-realtime.spec.ts",
      "file": "03-dashboard-realtime.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Dashboard and Real-Time Updates",
          "file": "03-dashboard-realtime.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "should display dashboard with widgets",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 5848,
                      "error": {
                        "message": "Error: locator._expect: expectedNumber: expected float, got object",
                        "stack": "Error: locator._expect: expectedNumber: expected float, got object\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:29:74",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 74,
                          "line": 29
                        },
                        "snippet": "\u001b[0m \u001b[90m 27 |\u001b[39m\n \u001b[90m 28 |\u001b[39m     \u001b[90m// Check for common dashboard elements\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'canvas, .chart, [data-testid=\"widget\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount({ min\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 30 |\u001b[39m\n \u001b[90m 31 |\u001b[39m     \u001b[90m// Visual regression: Main dashboard\u001b[39m\n \u001b[90m 32 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveScreenshot(\u001b[32m'dashboard-main.png'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 74,
                            "line": 29
                          },
                          "message": "Error: locator._expect: expectedNumber: expected float, got object\n\n  27 |\n  28 |     // Check for common dashboard elements\n> 29 |     await expect(page.locator('canvas, .chart, [data-testid=\"widget\"]')).toHaveCount({ min: 1 });\n     |                                                                          ^\n  30 |\n  31 |     // Visual regression: Main dashboard\n  32 |     await expect(page).toHaveScreenshot('dashboard-main.png', {\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:29:74"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:55.511Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-99550-play-dashboard-with-widgets-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-99550-play-dashboard-with-widgets-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-99550-play-dashboard-with-widgets-chromium\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 74,
                        "line": 29
                      }
                    },
                    {
                      "workerIndex": 12,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 5940,
                      "error": {
                        "message": "Error: locator._expect: expectedNumber: expected float, got object",
                        "stack": "Error: locator._expect: expectedNumber: expected float, got object\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:29:74",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 74,
                          "line": 29
                        },
                        "snippet": "\u001b[0m \u001b[90m 27 |\u001b[39m\n \u001b[90m 28 |\u001b[39m     \u001b[90m// Check for common dashboard elements\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'canvas, .chart, [data-testid=\"widget\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount({ min\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 30 |\u001b[39m\n \u001b[90m 31 |\u001b[39m     \u001b[90m// Visual regression: Main dashboard\u001b[39m\n \u001b[90m 32 |\u001b[39m     \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveScreenshot(\u001b[32m'dashboard-main.png'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 74,
                            "line": 29
                          },
                          "message": "Error: locator._expect: expectedNumber: expected float, got object\n\n  27 |\n  28 |     // Check for common dashboard elements\n> 29 |     await expect(page.locator('canvas, .chart, [data-testid=\"widget\"]')).toHaveCount({ min: 1 });\n     |                                                                          ^\n  30 |\n  31 |     // Visual regression: Main dashboard\n  32 |     await expect(page).toHaveScreenshot('dashboard-main.png', {\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:29:74"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:02.381Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-99550-play-dashboard-with-widgets-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-99550-play-dashboard-with-widgets-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-99550-play-dashboard-with-widgets-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-99550-play-dashboard-with-widgets-chromium-retry1\\trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 74,
                        "line": 29
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "42174909781eac2e8c54-b3f484d76412802fb44e",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 24,
              "column": 3
            },
            {
              "title": "should display device statistics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 2671,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:55.805Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "42174909781eac2e8c54-8270dc9b1e0c3ab3960b",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 38,
              "column": 3
            },
            {
              "title": "should render charts correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 13137,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:48:16",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 16,
                          "line": 48
                        },
                        "snippet": "\u001b[0m \u001b[90m 46 |\u001b[39m   test(\u001b[32m'should render charts correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 47 |\u001b[39m     \u001b[90m// Wait for charts to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 48 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'canvas'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 49 |\u001b[39m\n \u001b[90m 50 |\u001b[39m     \u001b[90m// Get canvas elements\u001b[39m\n \u001b[90m 51 |\u001b[39m     \u001b[36mconst\u001b[39m canvasCount \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'canvas'\u001b[39m)\u001b[33m.\u001b[39mcount()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 16,
                            "line": 48
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n\n  46 |   test('should render charts correctly', async ({ page }) => {\n  47 |     // Wait for charts to load\n> 48 |     await page.waitForSelector('canvas', { timeout: 10000 });\n     |                ^\n  49 |\n  50 |     // Get canvas elements\n  51 |     const canvasCount = await page.locator('canvas').count();\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:48:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:56.331Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-b8dd8-uld-render-charts-correctly-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-b8dd8-uld-render-charts-correctly-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-b8dd8-uld-render-charts-correctly-chromium\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 16,
                        "line": 48
                      }
                    },
                    {
                      "workerIndex": 16,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 13152,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:48:16",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 16,
                          "line": 48
                        },
                        "snippet": "\u001b[0m \u001b[90m 46 |\u001b[39m   test(\u001b[32m'should render charts correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 47 |\u001b[39m     \u001b[90m// Wait for charts to load\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 48 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'canvas'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 49 |\u001b[39m\n \u001b[90m 50 |\u001b[39m     \u001b[90m// Get canvas elements\u001b[39m\n \u001b[90m 51 |\u001b[39m     \u001b[36mconst\u001b[39m canvasCount \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'canvas'\u001b[39m)\u001b[33m.\u001b[39mcount()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 16,
                            "line": 48
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n\n  46 |   test('should render charts correctly', async ({ page }) => {\n  47 |     // Wait for charts to load\n> 48 |     await page.waitForSelector('canvas', { timeout: 10000 });\n     |                ^\n  49 |\n  50 |     // Get canvas elements\n  51 |     const canvasCount = await page.locator('canvas').count();\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:48:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:10.461Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-b8dd8-uld-render-charts-correctly-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-b8dd8-uld-render-charts-correctly-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-b8dd8-uld-render-charts-correctly-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-b8dd8-uld-render-charts-correctly-chromium-retry1\\trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 16,
                        "line": 48
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "42174909781eac2e8c54-f14a48b8885b767b3a74",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 46,
              "column": 3
            },
            {
              "title": "should update charts in real-time",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 10,
                      "status": "failed",
                      "duration": 13115,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:66:16",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 16,
                          "line": 66
                        },
                        "snippet": "\u001b[0m \u001b[90m 64 |\u001b[39m   test(\u001b[32m'should update charts in real-time'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 65 |\u001b[39m     \u001b[90m// Wait for initial chart render\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'canvas'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m\n \u001b[90m 69 |\u001b[39m     \u001b[90m// Take initial screenshot\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 16,
                            "line": 66
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n\n  64 |   test('should update charts in real-time', async ({ page }) => {\n  65 |     // Wait for initial chart render\n> 66 |     await page.waitForSelector('canvas', { timeout: 10000 });\n     |                ^\n  67 |     await page.waitForTimeout(2000);\n  68 |\n  69 |     // Take initial screenshot\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:66:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:56.856Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7fa91--update-charts-in-real-time-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7fa91--update-charts-in-real-time-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7fa91--update-charts-in-real-time-chromium\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 16,
                        "line": 66
                      }
                    },
                    {
                      "workerIndex": 17,
                      "parallelIndex": 10,
                      "status": "failed",
                      "duration": 13289,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:66:16",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 16,
                          "line": 66
                        },
                        "snippet": "\u001b[0m \u001b[90m 64 |\u001b[39m   test(\u001b[32m'should update charts in real-time'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 65 |\u001b[39m     \u001b[90m// Wait for initial chart render\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'canvas'\u001b[39m\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m10000\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m2000\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m\n \u001b[90m 69 |\u001b[39m     \u001b[90m// Take initial screenshot\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 16,
                            "line": 66
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('canvas') to be visible\u001b[22m\n\n\n  64 |   test('should update charts in real-time', async ({ page }) => {\n  65 |     // Wait for initial chart render\n> 66 |     await page.waitForSelector('canvas', { timeout: 10000 });\n     |                ^\n  67 |     await page.waitForTimeout(2000);\n  68 |\n  69 |     // Take initial screenshot\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:66:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:10.990Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7fa91--update-charts-in-real-time-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7fa91--update-charts-in-real-time-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7fa91--update-charts-in-real-time-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7fa91--update-charts-in-real-time-chromium-retry1\\trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 16,
                        "line": 66
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "42174909781eac2e8c54-71ac7da683aed9f020d8",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 64,
              "column": 3
            },
            {
              "title": "should handle device selector",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 2499,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:57.769Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "42174909781eac2e8c54-c8e9dd8b584a7176cce5",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 88,
              "column": 3
            },
            {
              "title": "should display recent alerts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 2512,
                      "error": {
                        "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i\". Did you mean to CSS.escape it?",
                        "stack": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i\". Did you mean to CSS.escape it?\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:118:29",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 29,
                          "line": 118
                        },
                        "snippet": "\u001b[0m \u001b[90m 116 |\u001b[39m     \u001b[36mconst\u001b[39m alertsSection \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 117 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 118 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m alertsSection\u001b[33m.\u001b[39mcount() \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m) {\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 119 |\u001b[39m       \u001b[36mawait\u001b[39m alertsSection\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mscrollIntoViewIfNeeded()\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\n \u001b[90m 121 |\u001b[39m       \u001b[90m// Visual regression: Alerts section\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 29,
                            "line": 118
                          },
                          "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i\". Did you mean to CSS.escape it?\n\n  116 |     const alertsSection = page.locator('[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i');\n  117 |\n> 118 |     if (await alertsSection.count() > 0) {\n      |                             ^\n  119 |       await alertsSection.first().scrollIntoViewIfNeeded();\n  120 |\n  121 |       // Visual regression: Alerts section\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:118:29"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:58.049Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-d58bd-hould-display-recent-alerts-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-d58bd-hould-display-recent-alerts-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-d58bd-hould-display-recent-alerts-chromium\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 29,
                        "line": 118
                      }
                    },
                    {
                      "workerIndex": 11,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 2677,
                      "error": {
                        "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i\". Did you mean to CSS.escape it?",
                        "stack": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i\". Did you mean to CSS.escape it?\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:118:29",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 29,
                          "line": 118
                        },
                        "snippet": "\u001b[0m \u001b[90m 116 |\u001b[39m     \u001b[36mconst\u001b[39m alertsSection \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 117 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 118 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m alertsSection\u001b[33m.\u001b[39mcount() \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m) {\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 119 |\u001b[39m       \u001b[36mawait\u001b[39m alertsSection\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mscrollIntoViewIfNeeded()\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\n \u001b[90m 121 |\u001b[39m       \u001b[90m// Visual regression: Alerts section\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 29,
                            "line": 118
                          },
                          "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i\". Did you mean to CSS.escape it?\n\n  116 |     const alertsSection = page.locator('[data-testid=\"alerts\"], [data-testid=\"recent-alerts\"], text=/Recent Alerts|Alerts/i');\n  117 |\n> 118 |     if (await alertsSection.count() > 0) {\n      |                             ^\n  119 |       await alertsSection.first().scrollIntoViewIfNeeded();\n  120 |\n  121 |       // Visual regression: Alerts section\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:118:29"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:01.516Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-d58bd-hould-display-recent-alerts-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-d58bd-hould-display-recent-alerts-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-d58bd-hould-display-recent-alerts-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-d58bd-hould-display-recent-alerts-chromium-retry1\\trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 29,
                        "line": 118
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "42174909781eac2e8c54-33a97bf700a879120203",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 114,
              "column": 3
            },
            {
              "title": "should navigate between dashboard views",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 2526,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:52:58.486Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "42174909781eac2e8c54-1753d3566e18755118bb",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 126,
              "column": 3
            },
            {
              "title": "should display WebSocket connection status",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5742,
                      "error": {
                        "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"ws-status\"], .ws-indicator, text=/Connected|Connecting/i\". Did you mean to CSS.escape it?",
                        "stack": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"ws-status\"], .ws-indicator, text=/Connected|Connecting/i\". Did you mean to CSS.escape it?\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:152:24",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 24,
                          "line": 152
                        },
                        "snippet": "\u001b[0m \u001b[90m 150 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m3000\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 151 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 152 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m wsStatus\u001b[33m.\u001b[39mcount() \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m) {\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 153 |\u001b[39m       \u001b[90m// Visual regression: WebSocket status\u001b[39m\n \u001b[90m 154 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveScreenshot(\u001b[32m'dashboard-ws-status.png'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 24,
                            "line": 152
                          },
                          "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"ws-status\"], .ws-indicator, text=/Connected|Connecting/i\". Did you mean to CSS.escape it?\n\n  150 |     await page.waitForTimeout(3000);\n  151 |\n> 152 |     if (await wsStatus.count() > 0) {\n      |                        ^\n  153 |       // Visual regression: WebSocket status\n  154 |       await expect(page).toHaveScreenshot('dashboard-ws-status.png');\n  155 |\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:152:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:00.278Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7c69e-WebSocket-connection-status-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7c69e-WebSocket-connection-status-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7c69e-WebSocket-connection-status-chromium\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 24,
                        "line": 152
                      }
                    },
                    {
                      "workerIndex": 14,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5831,
                      "error": {
                        "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"ws-status\"], .ws-indicator, text=/Connected|Connecting/i\". Did you mean to CSS.escape it?",
                        "stack": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"ws-status\"], .ws-indicator, text=/Connected|Connecting/i\". Did you mean to CSS.escape it?\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:152:24",
                        "location": {
                          "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                          "column": 24,
                          "line": 152
                        },
                        "snippet": "\u001b[0m \u001b[90m 150 |\u001b[39m     \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m3000\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 151 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 152 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mawait\u001b[39m wsStatus\u001b[33m.\u001b[39mcount() \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m) {\n \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 153 |\u001b[39m       \u001b[90m// Visual regression: WebSocket status\u001b[39m\n \u001b[90m 154 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveScreenshot(\u001b[32m'dashboard-ws-status.png'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 155 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                            "column": 24,
                            "line": 152
                          },
                          "message": "Error: locator.count: Unexpected token \"=\" while parsing css selector \"[data-testid=\"ws-status\"], .ws-indicator, text=/Connected|Connecting/i\". Did you mean to CSS.escape it?\n\n  150 |     await page.waitForTimeout(3000);\n  151 |\n> 152 |     if (await wsStatus.count() > 0) {\n      |                        ^\n  153 |       // Visual regression: WebSocket status\n  154 |       await expect(page).toHaveScreenshot('dashboard-ws-status.png');\n  155 |\n    at C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts:152:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:53:06.991Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7c69e-WebSocket-connection-status-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7c69e-WebSocket-connection-status-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7c69e-WebSocket-connection-status-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\03-dashboard-realtime-Dash-7c69e-WebSocket-connection-status-chromium-retry1\\trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\sensorvision\\frontend\\e2e\\03-dashboard-realtime.spec.ts",
                        "column": 24,
                        "line": 152
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "42174909781eac2e8c54-d1252c1b9b361aea4512",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 145,
              "column": 3
            },
            {
              "title": "should refresh data manually",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 2534,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:01.023Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "42174909781eac2e8c54-0b505ab3a00931dcd2ff",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 162,
              "column": 3
            },
            {
              "title": "should display time range selector",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 2546,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:03.567Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "42174909781eac2e8c54-fbb6e8aad33cd9c08742",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 181,
              "column": 3
            },
            {
              "title": "should handle empty state when no devices exist",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 2564,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:05.241Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "42174909781eac2e8c54-5d9e0b8b8336e8549bd0",
              "file": "03-dashboard-realtime.spec.ts",
              "line": 202,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "04-rules-alerts.spec.ts",
      "file": "04-rules-alerts.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Rules and Alerts",
          "file": "04-rules-alerts.spec.ts",
          "line": 13,
          "column": 6,
          "specs": [
            {
              "title": "should display rules list",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 4710,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:06.137Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-f0b942d1ec5a54477a80",
              "file": "04-rules-alerts.spec.ts",
              "line": 27,
              "column": 3
            },
            {
              "title": "should create a new rule",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 61486,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 16,
                            "line": 51
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"variableName\"], select[name=\"variableName\"]')\u001b[22m\n\n\n  49 |\n  50 |     // Select variable\n> 51 |     await page.fill('input[name=\"variableName\"], select[name=\"variableName\"]', 'temperature');\n     |                ^\n  52 |\n  53 |     // Select operator\n  54 |     await page.click('select[name=\"operator\"]');\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:51:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:07.916Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-create-a-new-rule-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-create-a-new-rule-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-create-a-new-rule-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 25,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 61452,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 16,
                            "line": 51
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"variableName\"], select[name=\"variableName\"]')\u001b[22m\n\n\n  49 |\n  50 |     // Select variable\n> 51 |     await page.fill('input[name=\"variableName\"], select[name=\"variableName\"]', 'temperature');\n     |                ^\n  52 |\n  53 |     // Select operator\n  54 |     await page.click('select[name=\"operator\"]');\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:51:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:54:10.172Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-create-a-new-rule-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-create-a-new-rule-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-create-a-new-rule-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-create-a-new-rule-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-39ed963c8fcab09bb217",
              "file": "04-rules-alerts.spec.ts",
              "line": 38,
              "column": 3
            },
            {
              "title": "should edit an existing rule",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 6,
                      "status": "timedOut",
                      "duration": 62109,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 103,
                            "line": 78
                          },
                          "message": "Error: locator.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[aria-label=\"Edit\"]').or(getByRole('button', { name: /Edit/i })).first()\u001b[22m\n\n\n  76 |   test('should edit an existing rule', async ({ page }) => {\n  77 |     // Click edit button on first rule\n> 78 |     await page.locator('[aria-label=\"Edit\"]').or(page.getByRole('button', { name: /Edit/i })).first().click();\n     |                                                                                                       ^\n  79 |\n  80 |     // Modify threshold\n  81 |     await page.fill('input[name=\"threshold\"]', '90');\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:78:103"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:09.579Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--8ce22-hould-edit-an-existing-rule-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--8ce22-hould-edit-an-existing-rule-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--8ce22-hould-edit-an-existing-rule-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 26,
                      "parallelIndex": 6,
                      "status": "timedOut",
                      "duration": 61707,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 103,
                            "line": 78
                          },
                          "message": "Error: locator.click: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[aria-label=\"Edit\"]').or(getByRole('button', { name: /Edit/i })).first()\u001b[22m\n\n\n  76 |   test('should edit an existing rule', async ({ page }) => {\n  77 |     // Click edit button on first rule\n> 78 |     await page.locator('[aria-label=\"Edit\"]').or(page.getByRole('button', { name: /Edit/i })).first().click();\n     |                                                                                                       ^\n  79 |\n  80 |     // Modify threshold\n  81 |     await page.fill('input[name=\"threshold\"]', '90');\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:78:103"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:54:12.583Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--8ce22-hould-edit-an-existing-rule-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--8ce22-hould-edit-an-existing-rule-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--8ce22-hould-edit-an-existing-rule-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--8ce22-hould-edit-an-existing-rule-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-ab9438bacf9d3cced158",
              "file": "04-rules-alerts.spec.ts",
              "line": 76,
              "column": 3
            },
            {
              "title": "should toggle rule active status",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 62026,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 39,
                            "line": 97
                          },
                          "message": "Error: locator.isChecked: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[role=\"switch\"], input[type=\"checkbox\"]').first()\u001b[22m\n\n\n   95 |     const toggle = page.locator('[role=\"switch\"], input[type=\"checkbox\"]').first();\n   96 |\n>  97 |     const initialState = await toggle.isChecked();\n      |                                       ^\n   98 |     await toggle.click();\n   99 |\n  100 |     // Wait for update\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:97:39"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:10.856Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--6e362-d-toggle-rule-active-status-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--6e362-d-toggle-rule-active-status-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--6e362-d-toggle-rule-active-status-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 27,
                      "parallelIndex": 5,
                      "status": "timedOut",
                      "duration": 62034,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 39,
                            "line": 97
                          },
                          "message": "Error: locator.isChecked: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[role=\"switch\"], input[type=\"checkbox\"]').first()\u001b[22m\n\n\n   95 |     const toggle = page.locator('[role=\"switch\"], input[type=\"checkbox\"]').first();\n   96 |\n>  97 |     const initialState = await toggle.isChecked();\n      |                                       ^\n   98 |     await toggle.click();\n   99 |\n  100 |     // Wait for update\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:97:39"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:54:13.800Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--6e362-d-toggle-rule-active-status-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--6e362-d-toggle-rule-active-status-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--6e362-d-toggle-rule-active-status-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and--6e362-d-toggle-rule-active-status-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-a1e02d145f2cca428857",
              "file": "04-rules-alerts.spec.ts",
              "line": 93,
              "column": 3
            },
            {
              "title": "should view alerts page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 4711,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:14.019Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-2aadaeaaa809194ac2c5",
              "file": "04-rules-alerts.spec.ts",
              "line": 107,
              "column": 3
            },
            {
              "title": "should filter alerts by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 2568,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:18.833Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-fb198ff348b16126fbe2",
              "file": "04-rules-alerts.spec.ts",
              "line": 122,
              "column": 3
            },
            {
              "title": "should acknowledge an alert",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 2530,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:21.413Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-109f468cd28e64c22db6",
              "file": "04-rules-alerts.spec.ts",
              "line": 145,
              "column": 3
            },
            {
              "title": "should delete a rule",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 3,
                      "status": "timedOut",
                      "duration": 61751,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 16,
                            "line": 174
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"variableName\"]')\u001b[22m\n\n\n  172 |     await page.keyboard.press('ArrowDown');\n  173 |     await page.keyboard.press('Enter');\n> 174 |     await page.fill('input[name=\"variableName\"]', 'temp');\n      |                ^\n  175 |     await page.click('select[name=\"operator\"]');\n  176 |     await page.selectOption('select[name=\"operator\"]', 'GT');\n  177 |     await page.fill('input[name=\"threshold\"]', '50');\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:174:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-31T19:53:24.749Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-delete-a-rule-chromium\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-delete-a-rule-chromium\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-delete-a-rule-chromium\\error-context.md"
                        }
                      ]
                    },
                    {
                      "workerIndex": 28,
                      "parallelIndex": 3,
                      "status": "timedOut",
                      "duration": 61683,
                      "error": {
                        "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 60000ms exceeded.\u001b[39m"
                        },
                        {
                          "location": {
                            "file": "C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts",
                            "column": 16,
                            "line": 174
                          },
                          "message": "Error: page.fill: Test timeout of 60000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('input[name=\"variableName\"]')\u001b[22m\n\n\n  172 |     await page.keyboard.press('ArrowDown');\n  173 |     await page.keyboard.press('Enter');\n> 174 |     await page.fill('input[name=\"variableName\"]', 'temp');\n      |                ^\n  175 |     await page.click('select[name=\"operator\"]');\n  176 |     await page.selectOption('select[name=\"operator\"]', 'GT');\n  177 |     await page.fill('input[name=\"threshold\"]', '50');\n    at C:\\sensorvision\\frontend\\e2e\\04-rules-alerts.spec.ts:174:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-31T19:54:27.409Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-delete-a-rule-chromium-retry1\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-delete-a-rule-chromium-retry1\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-delete-a-rule-chromium-retry1\\error-context.md"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "C:\\sensorvision\\frontend\\test-artifacts\\04-rules-alerts-Rules-and-Alerts-should-delete-a-rule-chromium-retry1\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "72401c62fa4f4fdadd79-f69048c2eee9f5acf81c",
              "file": "04-rules-alerts.spec.ts",
              "line": 164,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-31T19:52:50.341Z",
    "duration": 159010.607,
    "expected": 19,
    "skipped": 0,
    "unexpected": 14,
    "flaky": 0
  }
}