# =============================================================================
# SensorVision Production Profile Configuration
# =============================================================================
# This profile is activated when SPRING_PROFILES_ACTIVE=prod
# It overrides default settings with production-optimized values
# =============================================================================

# ==========================================
# SERVER CONFIGURATION
# ==========================================
server.port=8080
server.shutdown=graceful

# Error handling - Never expose internal details in production
server.error.include-message=never
server.error.include-stacktrace=never
server.error.include-exception=false
server.error.include-binding-errors=never

# ==========================================
# APPLICATION NAME
# ==========================================
spring.application.name=sensorvision

# ==========================================
# DATABASE CONFIGURATION - RDS
# ==========================================
# REQUIRED: All database credentials must be set via environment variables
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Production Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.leak-detection-threshold=60000

# ==========================================
# JPA/HIBERNATE CONFIGURATION
# ==========================================
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=validate

# Hibernate Properties
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
# Caching disabled - JCache dependency not included
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ==========================================
# FLYWAY DATABASE MIGRATIONS
# ==========================================
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
# Temporarily disable validation to handle V26 migration conflict
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=true
spring.flyway.connect-retries=10
spring.flyway.connect-retries-interval=5

# ==========================================
# EMAIL/SMTP CONFIGURATION
# ==========================================
# REQUIRED: All SMTP credentials must be set via environment variables
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Disable mail health check when email is not enabled
# This prevents health check failures when EMAIL_ENABLED=false
management.health.mail.enabled=false

# ==========================================
# SECURITY CONFIGURATION
# ==========================================
# REQUIRED: JWT_SECRET must be set via environment variable
spring.security.oauth2.resourceserver.jwt.secret=${JWT_SECRET}

# ==========================================
# MQTT BROKER CONFIGURATION
# ==========================================
# REQUIRED: All MQTT credentials must be set via environment variables
mqtt.broker.url=${MQTT_BROKER_URL}
mqtt.broker.username=${MQTT_USERNAME}
mqtt.broker.password=${MQTT_PASSWORD}
mqtt.device-auth.required=${MQTT_DEVICE_AUTH_REQUIRED:true}

# ==========================================
# NOTIFICATION SERVICES CONFIGURATION
# ==========================================
# Email Notifications
notification.email.enabled=${EMAIL_ENABLED:false}
notification.email.from=${EMAIL_FROM}

# SMS Notifications (Twilio)
notification.sms.enabled=${SMS_ENABLED:false}
notification.sms.from=${SMS_FROM_NUMBER:}
notification.sms.twilio.account-sid=${TWILIO_ACCOUNT_SID:}
notification.sms.twilio.auth-token=${TWILIO_AUTH_TOKEN:}

# Webhook Notifications
notification.webhook.enabled=${WEBHOOK_ENABLED:true}
notification.webhook.timeout-ms=${WEBHOOK_TIMEOUT_MS:5000}

# Slack Notifications
notifications.slack.enabled=${SLACK_ENABLED:false}
notifications.slack.webhook-url=${SLACK_WEBHOOK_URL:}

# Microsoft Teams Notifications
notifications.teams.enabled=${TEAMS_ENABLED:false}
notifications.teams.webhook-url=${TEAMS_WEBHOOK_URL:}

# ==========================================
# SUPPORT SYSTEM CONFIGURATION
# ==========================================
support.issue.email=${SUPPORT_ISSUE_EMAIL}
support.issue.enabled=${SUPPORT_ISSUE_ENABLED:true}

# ==========================================
# SIMULATOR CONFIGURATION - DISABLED
# ==========================================
simulator.enabled=false

# ==========================================
# APPLICATION SETTINGS
# ==========================================
# Base URL for production (used in emails, links, etc.)
app.base-url=${APP_BASE_URL:http://35.88.65.186.nip.io:8080}

# JWT Configuration - REQUIRED
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}
app.jwt.issuer=${JWT_ISSUER}

# ==========================================
# SPRING BOOT ACTUATOR & MONITORING
# ==========================================
# Only expose necessary endpoints in production
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.base-path=/actuator

# Health Endpoint Configuration - Restricted
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized
management.endpoint.health.probes.enabled=true

# Health Checks
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.diskspace.threshold=10GB

# Metrics Configuration
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=production
management.metrics.export.prometheus.enabled=true

# ==========================================
# RATE LIMITING CONFIGURATION - Production
# ==========================================
rate-limit.enabled=true

# Stricter limits for production
rate-limit.default-capacity=60
rate-limit.default-refill-tokens=60
rate-limit.default-refill-minutes=1

# IoT telemetry - allow higher throughput
rate-limit.data-ingestion-capacity=2000
rate-limit.data-ingestion-refill-tokens=2000
rate-limit.data-ingestion-refill-minutes=1

# Import/Export moderate limits
rate-limit.import-capacity=30
rate-limit.import-refill-tokens=30
rate-limit.import-refill-minutes=1

rate-limit.export-capacity=50
rate-limit.export-refill-tokens=50
rate-limit.export-refill-minutes=1

# ==========================================
# LOGGING CONFIGURATION - Production Levels
# ==========================================
# Log Levels
logging.level.root=WARN
logging.level.org.sensorvision=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate=WARN
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.hibernate.engine.jdbc.spi.SqlStatementLogger=ERROR

# Log File Configuration
logging.file.name=logs/sensorvision.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.file.total-size-cap=5GB

# Log Patterns
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Logback Rolling Policy
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30

# ==========================================
# CORS CONFIGURATION - Production Domains Only
# ==========================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://${DOMAIN:localhost}}
cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true
cors.max-age=3600
